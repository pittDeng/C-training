/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        int k=lists.size();
        ListNode* head=NULL;
        ListNode**current=&head;      //请注意这里的指针的指针的用法。
        for(int i=0;i<lists.size();i++)
            if(lists[i]==NULL){lists.erase(lists.begin()+i);i--;}
        while(lists.size()>0)
        {
            int min=lists[0]->val;
            int minindex=0;
            for(int i=0;i<lists.size();i++)
            {
                if(lists[i]->val<min)
                {
                    min=lists[i]->val;
                    minindex=i;
                }
            }
            *current=lists[minindex];
            current=&(lists[minindex]->next);
            lists[minindex]=lists[minindex]->next;
            if(lists[minindex]==NULL)lists.erase(lists.begin()+minindex);
        }
        return head;
    }
};
